//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.17

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "metrics")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: String,
    #[sea_orm(unique)]
    pub name: String,
    pub description: Option<String>,
    pub direction: i32,
    pub domain: Option<String>,
    pub short_name: Option<String>,
    pub qualitative: bool,
    pub val_type: Option<String>,
    pub enabled: Option<bool>,
    #[sea_orm(column_type = "Decimal(Some((38, 20)))", nullable)]
    pub worst_value: Option<Decimal>,
    #[sea_orm(column_type = "Decimal(Some((38, 20)))", nullable)]
    pub best_value: Option<Decimal>,
    pub optimized_best_value: Option<bool>,
    pub hidden: Option<bool>,
    pub delete_historical_data: Option<bool>,
    pub decimal_scale: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
