//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.17

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "issues")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub kee: String,
    pub rule_uuid: Option<String>,
    pub severity: Option<String>,
    pub manual_severity: bool,
    pub message: Option<String>,
    pub line: Option<i32>,
    #[sea_orm(column_type = "Decimal(Some((30, 20)))", nullable)]
    pub gap: Option<Decimal>,
    pub status: Option<String>,
    pub resolution: Option<String>,
    pub checksum: Option<String>,
    pub assignee: Option<String>,
    pub author_login: Option<String>,
    pub effort: Option<i32>,
    pub created_at: Option<i64>,
    pub updated_at: Option<i64>,
    pub issue_creation_date: Option<i64>,
    pub issue_update_date: Option<i64>,
    pub issue_close_date: Option<i64>,
    pub tags: Option<String>,
    pub component_uuid: Option<String>,
    pub project_uuid: Option<String>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub locations: Option<Vec<u8>>,
    pub issue_type: Option<i16>,
    pub quick_fix_available: Option<bool>,
    pub rule_description_context_key: Option<String>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub message_formattings: Option<Vec<u8>>,
    pub code_variants: Option<String>,
    pub clean_code_attribute: Option<String>,
    pub prioritized_rule: Option<bool>,
    pub from_sonarqube_update: bool,
    pub internal_tags: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
