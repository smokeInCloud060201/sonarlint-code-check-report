//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.17

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "rules")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: String,
    pub name: Option<String>,
    pub plugin_rule_key: String,
    pub plugin_key: Option<String>,
    pub plugin_config_key: Option<String>,
    pub plugin_name: String,
    pub scope: String,
    pub priority: Option<i32>,
    pub status: Option<String>,
    pub language: Option<String>,
    pub def_remediation_function: Option<String>,
    pub def_remediation_gap_mult: Option<String>,
    pub def_remediation_base_effort: Option<String>,
    pub gap_description: Option<String>,
    pub is_template: bool,
    pub description_format: Option<String>,
    pub rule_type: Option<i16>,
    pub security_standards: Option<String>,
    pub is_ad_hoc: bool,
    pub is_external: bool,
    pub created_at: Option<i64>,
    pub updated_at: Option<i64>,
    pub template_uuid: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub note_data: Option<String>,
    pub note_user_uuid: Option<String>,
    pub note_created_at: Option<i64>,
    pub note_updated_at: Option<i64>,
    pub remediation_function: Option<String>,
    pub remediation_gap_mult: Option<String>,
    pub remediation_base_effort: Option<String>,
    pub ad_hoc_name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub ad_hoc_description: Option<String>,
    pub ad_hoc_severity: Option<String>,
    pub ad_hoc_type: Option<i16>,
    pub education_principles: Option<String>,
    pub clean_code_attribute: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
